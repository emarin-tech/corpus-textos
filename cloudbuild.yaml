substitutions:
  _TS: "notimestamp"

steps:
# Paso 0: Generar timestamp y guardarlo
- name: 'ubuntu'
  id: 'generate-timestamp'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "Generando timestamp..."
      date +%Y%m%d%H%M%S > /workspace/TIMESTAMP

# Paso 1: Obtener secretos desde Secret Manager
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'verify-secrets'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "Obteniendo secretos..."
      echo "$(gcloud secrets versions access latest --secret=DJANGO_SECRET_KEY)" > /workspace/django_secret_key
      echo "$(gcloud secrets versions access latest --secret=DB_NAME)" > /workspace/db_name
      echo "$(gcloud secrets versions access latest --secret=DB_USER)" > /workspace/db_user
      echo "$(gcloud secrets versions access latest --secret=DB_PASSWORD)" > /workspace/db_password
      echo "$(gcloud secrets versions access latest --secret=DB_HOST)" > /workspace/db_host
      echo "$(gcloud secrets versions access latest --secret=STRIPE_SECRET_KEY)" > /workspace/stripe_secret
      echo "$(gcloud secrets versions access latest --secret=STRIPE_PUBLISHABLE_KEY)" > /workspace/stripe_public
      echo "$(gcloud secrets versions access latest --secret=DJANGO_SETTINGS_MODULE)" > /workspace/django_settings_module

# Paso 2: Construir la imagen
- name: 'gcr.io/cloud-builders/docker'
  id: 'build'
  waitFor: ['verify-secrets']
  entrypoint: 'bash'
  args:
    - -c
    - |
      echo "Contenido de /workspace/TIMESTAMP:"
      cat /workspace/TIMESTAMP

      TS=$(cat /workspace/TIMESTAMP | tr -d '\n')
      echo "Usando tag: $TS"

      docker build --no-cache --pull -t europe-west1-docker.pkg.dev/corpus-451314/corpus-repo/corpus-app:$TS .


# Paso 3: Subir la imagen a Container Registry (GCR)
- name: 'gcr.io/cloud-builders/docker'
  id: 'push'
  waitFor: ['build']
  entrypoint: 'bash'
  args:
    - -c
    - |
      TS=$(cat /workspace/TIMESTAMP | tr -d '\n')
      docker push europe-west1-docker.pkg.dev/corpus-451314/corpus-repo/corpus-app:$TS

# Paso 4: Desplegar a Cloud Run con variables de entorno
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy'
  waitFor: ['push']
  entrypoint: 'bash'
  args:
    - -c
    - |
      echo "Desplegando a Cloud Run..."
      TS=$(cat /workspace/TIMESTAMP | tr -d '\n')
      django_secret_key=$(cat /workspace/django_secret_key)
      db_name=$(cat /workspace/db_name)
      db_user=$(cat /workspace/db_user)
      db_password=$(cat /workspace/db_password)
      db_host=$(cat /workspace/db_host)
      stripe_secret=$(cat /workspace/stripe_secret)
      stripe_public=$(cat /workspace/stripe_public)
      django_settings_module=$(cat /workspace/django_settings_module)

      gcloud run deploy corpus2026 \
        --image=europe-west1-docker.pkg.dev/corpus-451314/corpus-repo/corpus-app:$TS \
        --region=europe-west1 \
        --platform=managed \
        --allow-unauthenticated \
        --add-cloudsql-instances=corpus-451314:europe-west1:corpus-2026-instance \
        --set-env-vars=DJANGO_SETTINGS_MODULE=$(cat /workspace/django_settings_module) \
        --set-env-vars=SECRET_KEY=$django_secret_key \
        --set-env-vars=DB_NAME=$(cat /workspace/db_name) \
        --set-env-vars=DB_USER=$(cat /workspace/db_user) \
        --set-env-vars=DB_PASSWORD=$(cat /workspace/db_password) \
        --set-env-vars=DB_HOST=$(cat /workspace/db_host) \
        --set-env-vars=STRIPE_SECRET_KEY=$(cat /workspace/stripe_secret) \
        --set-env-vars=STRIPE_PUBLISHABLE_KEY=$(cat /workspace/stripe_public) \
        --set-env-vars=DEBUG=False \
        --set-env-vars=USE_SECRET_MANAGER=true \
        --set-env-vars=USE_CLOUD_SQL_PROXY=true \
        --set-env-vars=PYTHONPATH=/app \
        --set-env-vars=GOOGLE_CLOUD_PROJECT=corpus-451314

options:
  logging: CLOUD_LOGGING_ONLY   # O el modo que prefieras (NONE, GCS_ONLY, etc)


serviceAccount: '132887978036-compute@developer.gserviceaccount.com' # Cambia por tu cuenta de servicio